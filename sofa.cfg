# Uncomment if you want to compile Qt interface
 DEFINES += SOFA_GUI_QT

# Uncomment if you want to compile FLTK interface
# DEFINES += SOFA_GUI_FLTK

# Uncomment if you want to use RTDSC processor cycle-counter for timing
# Note: this is the fastest and most precise method but have issues on
# multi-CPUs or with varying CPU frequencies
# DEFINES += SOFA_RDTSC

# Uncomment if you want to use libPNG to read/write PNG images
#DEFINES += SOFA_HAVE_PNG

# YOU SHOULD NOT NEED TO MODIFY ANYTHING BELOW

win32{
#	CONFIG = debug_and_release
	CONFIG -= flat # preserve directory structure in files lists
}
else{
#	CONFIG = debug
	CONFIG = release

	# Uncomment if you want debug symbols even in release build
	QMAKE_CXXFLAGS += -g

	QMAKE_CC		= gcc
	QMAKE_CXX		= g++
	QMAKE_LINK		= g++
	QMAKE_LINK_SHLIB	= g++

#	CONFIG *= debug_and_release debug_and_release_target build_all

}

CONFIG -= qt

win32{
	contains (CONFIG, debug, debug|release) {
		 CONFIGDEBUG=debug
	}
	contains (CONFIG, release, debug|release) {
		 CONFIGDEBUG=release
	}

	# It's for windows project where we have output streams in a console.

	# Config for Visual C++ 6
	win32-msvc{
		CONFIGPROJECT=console vc6 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC6
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC6
		}
	}
	
	# Config for Visual C++ 7
	win32-msvc.net{
		CONFIGPROJECT=console vc7 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC7
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC7
		}
		QMAKE_CXXFLAGS_DEBUG = -wd4675 -wd4250 -GR -GX -MDd # -O1 -Og -Ob2 -GA -Ot -MDd # -G7 
		QMAKE_CXXFLAGS_RELEASE = -wd4675 -wd4250 -GR -GX -Ox -Og -Ob2 -GA -Ot -MD # -G7
	}
	
	# Config for Visual C++ 8
	win32-msvc2005{
		CONFIGPROJECT=console vc7 thread
		contains (CONFIGDEBUG, debug) {
			LIBSDIRECTORY=win32/DebugVC8
		}
		contains (CONFIGDEBUG, release) {
			LIBSDIRECTORY=win32/ReleaseVC8
		}
		QMAKE_CXXFLAGS_DEBUG = -wd4996 -wd4250 -GR -EHsc -MDd  -Od -ZI -Gm # -O1 -Og -Ob2 -GA -Ot -MDd # -G7 
		QMAKE_CXXFLAGS_RELEASE = -wd4996 -wd4250 -GR -EHsc -Ox -Og -Ob2 -GA -Ot -MD # -G7
	}

	# No support for DLL yet
	CONFIGLIBRARIES=staticlib

	#CONFIGLIBRARIES=dll
	#MSVCPROJ_LIBOPTIONS=/IMPLIB:$(TargetDir)$(TargetName).lib

	# libs has no suffix
	LIBSUFFIX=
}
unix {
 	contains (CONFIG, debug) {
		 CONFIGDEBUG=debug
	}
	contains (CONFIG, release) {
		 CONFIGDEBUG=release
	}
	#LIBSDIRECTORY=linux/$$CONFIGDEBUG
	LIBSDIRECTORY=linux

	# Use shared library
	CONFIGLIBRARIES=dynamiclib

	contains (CONFIGDEBUG, debug) {
		LIBSUFFIX = d
	}
}

contains (CONFIGDEBUG, release) {
	DEFINES += NDEBUG
}

contains (CONFIGDEBUG, debug) {
	SUFFIX = d
}

CONFIGLIBRARIES+= \
                  warn_on \
                  stl \
                  rtti \
                  thread

OBJECTS_DIR = OBJ/$$CONFIGDEBUG

INCLUDEPATH *= \
               $$SOFA_DIR/include \
               $$SOFA_DIR/extlibs \
               $$SOFA_DIR/framework \
               $$SOFA_DIR/modules \
               $$SOFA_DIR/applications

DEPENDPATH  *= \
               $$SOFA_DIR/framework \
               $$SOFA_DIR/modules \
               $$SOFA_DIR/applications

QMAKE_LIBDIR = $$SOFA_DIR/lib/$$LIBSDIRECTORY $$SOFA_DIR/lib/$$LIBSDIRECTORY/../Common

# default destination directory
DESTDIR = $$SOFA_DIR/lib/$$LIBSDIRECTORY

#win32{
#  DLLDESTDIR = $$SOFA_DIR/bin
#}
